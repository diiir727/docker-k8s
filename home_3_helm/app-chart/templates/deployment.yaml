apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.fullnameOverride }}
  template:
    metadata:
      labels:
        app: {{ .Values.fullnameOverride }}
    spec:
      containers:
      - name: {{ .Values.fullnameOverride }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: web
          containerPort: 8000
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DB_USER
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DB_PASS
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DB_NAME
          - name: HOST
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.fullnameOverride }}-config
                key: DB_HOST
          - name: GREET
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.fullnameOverride }}-config
                key: GREET
        livenessProbe:
          httpGet:
            port: 8000
            path: /version
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            port: 8000
            path: /health
          initialDelaySeconds: 10
          periodSeconds: 5