apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride }}-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.fullnameOverride }}-app
  template:
    metadata:
      labels:
        app: {{ .Values.fullnameOverride }}-app
    spec:
      containers:
      - name: {{ .Values.fullnameOverride }}-app
        image: "{{ .Values.products.repository }}:{{ .Values.products.version }}"
        imagePullPolicy: {{ .Values.products.pullPolicy }}
        ports:
        - name: {{ .Values.fullnameOverride }}-web
          containerPort: 8081
        env:
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DATABASE_USERNAME
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DATABASE_PASSWORD
          - name: DB_URL
            value: "jdbc:postgresql://postgres-products:5432/myapp"
          - name: SERVER_PORT
            value: "8081"
          - name: CACHE_ENABLED
            value: "true"
          - name: REDIS_HOST
            value: "redis-products"           
        livenessProbe:
          httpGet:
            port: 8081
            path: /live
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 20
        readinessProbe:
          httpGet:
            port: 8081
            path: /live
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 20