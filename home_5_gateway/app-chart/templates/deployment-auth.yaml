apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.fullnameOverride }}-{{ .Values.auth.name }}-deployment
spec:
  replicas: {{ .Values.authReplicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.auth.name }}-app
  template:
    metadata:
      labels:
        app: {{ .Values.auth.name }}-app
    spec:
      containers:
      - name: {{ .Values.auth.name }}-app
        image: "{{ .Values.auth.repository }}:{{ .Values.auth.version }}"
        imagePullPolicy: {{ .Values.auth.pullPolicy }}
        ports:
        - name: {{ .Values.auth.name }}-web
          containerPort: 8081
        env:
          - name: AUTH_DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DATABASE_USERNAME
          - name: AUTH_DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.fullnameOverride }}-secret
                key: DATABASE_PASSWORD
          - name: AUTH_DATABASE_URL
            value: "jdbc:postgresql://postgres-{{ .Values.auth.name }}:5432/myapp"
        livenessProbe:
          httpGet:
            port: 8081
            path: /auth/live
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 20
        readinessProbe:
          httpGet:
            port: 8081
            path: /auth/live
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 30